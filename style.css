/* Variables */
:root {
    /* Colors */
    --color-bg-primary: #000000fe;
    --color-bg-secondary: #111111fe;
    --color-bg-tertiary: #121212fe;
    --color-bg-quaternary: #010111fe;
    --color-border-primary: #00dbb3;
    --color-border-secondary: #33fdd6;
    --color-text-primary: #eeeeeece;
    --color-text-highlight: #f2f2f2f0;
    --color-correct: #0ebaa0d6;
    --color-incorrect: #de113ad6;
    --color-focus: #edaa06;

    /* Fonts */
    --font-primary: "Noto Sans Display", sans-serif;
    --font-secondary: "Noto Sans Linear A", sans-serif;

    /* Sizes and Durations */
    --border-width: 5px;
    --transition-duration: 0.3s;
    --pulse-duration: 0.5s;
    --grid-cell-pulse-time: 2s;
    --cell-transparent-percent: 20%;

    /* Game Specific */
    --timescale: 1;
    --round-duration: calc(10s * var(--timescale));
    --rotate-magnitude: 20deg;
    --horizontal-magnitude: 15%;
    --vertical-magnitude: 15%;
    --pulse-magnitude: 0.1;
    --animation-multiplier: 1;
}

/* Base Styles */
body,
html {
    height: 100vh;
    margin: 0;
    overflow: hidden;
    user-select: none;
    font-family: var(--font-primary);
    color: var(--color-text-primary);
    background: radial-gradient(var(--color-bg-primary),
            var(--color-bg-secondary),
            var(--color-bg-tertiary),
            var(--color-bg-quaternary),
            var(--color-bg-primary));
    background-attachment: fixed;
}

/* Accessibility */
:focus {
    outline: none;
    box-shadow: 0 0 10px 5px var(--color-focus); 
    opacity: 1;
    animation: hueRotate 6s linear infinite;
}

/* Layout */
.game-container {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: 5px;
    background: radial-gradient(var(--color-border-primary) 95%, var(--color-border-secondary) 97%);
    border: var(--border-width) solid var(--color-border-primary);
    box-sizing: border-box;
    width: calc(100vw - 10px);
    height: calc(100vh - 10px);
}

.game-container::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(-60deg, #222222dd, #2f2f2fcc, #333333cc);
    animation: hueRotate 60s linear infinite;
    z-index: 1;
    box-sizing: border-box;
}

.header {
    display: flex;
    width: 100%;
    height: 10%;
    justify-content: space-between;
    align-items: center;
    position: absolute;
    top: 2vh;
    left: 0;
    padding: 0 2vw;
    box-sizing: border-box;
    z-index: 5;
}


.hint-holder {
    font-size: 2.5vh;
    color: var(--color-text-primary);
    opacity: 0.05;
    z-index: 4;
    background: linear-gradient(#11111144, #00000066);
    border-radius: 25px;
    text-align: center;
    padding: 1vh;
    margin-left: 2vw;
    transition: opacity calc(2 * var(--transition-duration)),
        transform calc(2 * var(--transition-duration));
    transform: scale(1);
}

.hint-holder:hover, .hint-holder:focus {
    opacity: 1;
    transform: scale(1.1);
}

.score-holder {
    font-size: 2.5vh;
    color: var(--color-text-primary);
    z-index: 4;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    padding: 10px;
    transition: transform var(--transition-duration) ease-in-out;
}

.score-holder:hover, .score-holder:focus {
    transform: scale(1.2);
}

.score {
    font-size: 1.5em;
    font-weight: bold;
    margin-top: 10%;
    width: calc(8vw + 6vh);
    height: 20%;
    border-radius: 25px;
    background: linear-gradient(#11111144, #00000066);
    transition: font-size var(--transition-duration) ease-in-out;


}

.unlocked-percentage {
    font-size: 0.8em;
    transition: font-size var(--transition-duration) ease-in-out;

}


.score-holder:hover .unlocked-percentage, .score-holder:focus .unlocked-percentage {
    font-size: 1.2em;
}

.score-holder:hover .score, .score-holder:focus .score {
    font-size: 1.2em;
}


/* Character Display */
.character-display {
    width: calc(25vw + 5vh);
    height: calc(7vh + 7vw);
    padding: 1%;
    border-radius: 25px;
    font-size: 6vh;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 100;
    transition: transform var(--transition-duration) ease-in-out;
}

.character-display:hover {
    transform: scale(0.95);
}

.character-display::before {
    content: "";
    position: absolute;
    width: calc(25vw + 10vh);
    height: calc(3.5vh + 4vw);
    border-radius: 25px;
    background: linear-gradient(-65deg, #1e070777, #101210bb, #042010bb, #11115377);
    animation: hueRotate 6s linear infinite;
}

.character-display-text {
    background-image: linear-gradient(-35deg, #00dbb3, #65aec9, #881088, #b11867, #df9744, #03b93b, #00dbb3);
    background-size: 1000%;
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    -webkit-text-fill-color: transparent;
    text-shadow: -2px -4px 8px #ffffff21;
    animation: horizontalGradient 600s linear infinite,
        textRotate 6s linear infinite;
    transition: font-size calc(var(--transition-duration) * 0.75) ease-in-out;
}

.header .character-display:hover .character-display-text {
    font-size: 9vh;
}

.instructions {
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: var(--color-bg-secondary);
    padding: 20px;
    border: 1px solid var(--color-border-primary);
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    border-radius: 10px;
    z-index: 1003;
    color: var(--color-text-primary);
    text-align: center;
    max-width: 80%;
    max-height: 80%;
}


.instructions h1 {
    margin-top: 0;
    font-size: 2em;
    color: var(--color-text-highlight);
}

.instructions p {
    font-size: 1.2em;
    margin: 10px 0;
}

#start-game {
    background: none;
    position: relative;
    border: none;
    cursor: pointer;
    transition: transform 0.3s;
}

#start-game:focus {
    outline: none;
    box-shadow: none;
}

#start-game:focus::before,
#start-game:hover::before {
    box-shadow: 0 0 10px var(--color-focus);
}

#start-game:hover {
    transform: scale(1.05);
}


/* Game Grid */
.game-grid {
    z-index: 5;
    width: 90%;
    height: calc(100% - (7vh + 7vw - 2.5vh - 2.5vw));
    display: grid;
    grid-template-rows: repeat(var(--grid-rows, 1), 1fr);
    grid-template-columns: repeat(var(--grid-cols, 1), 1fr);
    gap: 2px;
    position: absolute;
    top: calc(5vh + 5vw);
    left: 50%;
    padding: 2vw 2vw 5vh;
    transform: translateX(-50%);
    box-sizing: border-box;
}


.grid-cell {
    background: radial-gradient(circle, #aaaaaa05 var(--cell-transparent-percent), transparent 100%);
    border-radius: 10px;
    outline: none;
    border: 1px #11111111 solid;
    display: none;
    align-items: center;
    justify-content: center;
    font-size: calc(1.5vw + 1.5vh);
    line-height: 5vh;
    text-align: center;
    transform: scale(0.95);
    font-family: var(--font-secondary);
    transition: transform var(--transition-duration) ease-out,
        background var(--transition-duration) ease-in-out;
    z-index: 0;
}

.grid-cell.in-use {
    display: flex;
    pointer-events: auto;
}

.grid-cell:hover {
    background: radial-gradient(circle, #bbbbbb6b var(--cell-transparent-percent), transparent 100%);
    transform: scale(1.025);
    cursor: pointer;
}

.grid-cell.chosen :hover {
    background: radial-gradient(circle, #cecece73 var(--cell-transparent-percent), transparent 100%);
    transform: scale(1.045);
}

.grid-cell:active {
    transform: scale(0.9);
}

.grid-cell.correct {
    background: radial-gradient(circle, var(--color-correct) var(--cell-transparent-percent), transparent 100%);
    z-index: -10;
    pointer-events: none;
    animation: gridPulseUp var(--pulse-duration) ease-in-out 0s,
        organicPulse var(--grid-cell-pulse-time) ease-in-out infinite var(--pulse-duration);
}

.grid-cell.incorrect {
    background: radial-gradient(circle, var(--color-incorrect) var(--cell-transparent-percent), transparent 100%);
    z-index: -10;
    pointer-events: none;
    animation: gridPulseDown var(--pulse-duration) ease-in-out 0s,
        organicPulse var(--grid-cell-pulse-time) ease-in-out infinite var(--pulse-duration);
}

.grid-char {
    background: none;
    height: 70%;
    width: 70%;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    user-select: none;
    color: var(--base-font-color);
    text-shadow: 0px 0px 5px #111111ee;
    position: absolute;
    z-index: 10;
    will-change: transform, top, right;
    transition: text-shadow calc(0.5 * var(--transition-duration));
}

.grid-cell:hover .grid-char {
    z-index: 20;
    text-shadow: 0px 0px 10px #080808;
    background: none;
}

.grid-cell.correct .grid-char,
.grid-cell.incorrect .grid-char {
    text-shadow: 0px 0px 5px #080808;
    background: none;
}

.chosen .grid-char {
    color: var(--chosen-font-color);
    background: none;
}

/* UI Elements */
.timer-bar {
    position: absolute;
    bottom: calc(-1 * var(--border-width));
    left: 0;
    width: 0%;
    height: var(--border-width);
    background: linear-gradient(to right, #aa24c255, #aa24c2ff);
    border-radius: 5px;
    z-index: 20;
    animation: hueRotate 10s linear infinite;
    transition: width 10s linear;
    will-change: width;
}

.swipe-gradient {
    position: absolute;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(to left, transparent 10%, #00000011 40%, #c2c2c288 45%, #e2e2e299 50%, transparent 55%);
    background-repeat: no-repeat;
    background-size: 200%;
    left: -110%;
    z-index: 1000;
    pointer-events: none;
    transition: left 1s linear;
    will-change: left;
}

.timescale-control {
    position: absolute;
    bottom: 20px;
    right: 20px;
    z-index: 1003;
    opacity: 0.05;
    font-family: var(--font-main);
    color: var(--text-color);
    transition: opacity var(--transition-duration), transform var(--transition-duration);
}

.timescale-control:hover {
    opacity: 1;
    transform: scale(1.05);
}

.custom-select {
    position: relative;
    display: inline-block;
}

.custom-select select {
    display: none;
    /* Hide original SELECT element */
}

.select-selected {
    background-color: rgba(17, 17, 17, 0.8);
    border: 1px solid var(--border-back-color);
    color: var(--text-color);
    padding: 8px 12px;
    border-radius: 5px;
    cursor: pointer;
    transition: border-color var(--transition-duration), background-color var(--transition-duration);
    width: 160px;
    /* Slightly wider for better visibility */
    font-weight: bold;
    /* Make the selected option stand out */
}

.select-items {
    position: absolute;
    background-color: rgba(17, 17, 17, 0.9);
    bottom: calc(100% + 5px);
    /* Position above the select box with a small gap */
    left: 0;
    right: 0;
    z-index: 1500;
    border: 1px solid var(--border-back-color);
    border-radius: 5px;
    max-height: none;
    overflow-y: visible;
    width: 100%;
    box-shadow: 0 -4px 8px rgba(0, 0, 0, 0.2);
    /* Add a subtle shadow for separation */
}

.select-items div {
    color: var(--text-color);
    padding: 8px 12px;
    cursor: pointer;
    transition: background-color var(--transition-duration);
}

.select-items div:focus {
    background-color: rgba(0, 0, 0, 0.1);
}

.select-items div:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

.grid-cell,
.select-selected,
.select-items div {
    transition: box-shadow 0.1s ease-in-out;
}

/* Style for the currently selected option in the dropdown */
.select-items div.same-as-selected {
    background-color: rgba(0, 219, 179, 0.2);
    /* Use a color that matches your theme */
    font-weight: bold;
}

.select-hide {
    display: none;
}

#overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(209, 186, 186, 0.4);
    z-index: 1001;
    pointer-events: none;
    opacity: 0.5;
}

/* Background element */
.timescale-control::before {
    content: "";
    position: absolute;
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
    background: linear-gradient(-65deg, #1e070777, #101210bb, #042010bb, #11115377);
    border-radius: 15px;
    z-index: -1;
    opacity: 0.8;
    transition: opacity var(--transition-duration);
}

.timescale-control:hover::before {
    opacity: 1;
}

.timescale-control:hover .select-selected,
.timescale-control:hover .select-items {
    background-color: rgba(0, 0, 0, 0.9);
    border-color: var(--border-back-gradient-color);
}

/* Add a subtle indicator for dropdown state */
.select-selected::after {
    content: '▼';
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 0.8em;
    opacity: 0.7;
}

.select-arrow-active::after {
    content: '▲';
}

.select-selected:focus,
.select-items div:focus {
    outline: 2px solid var(--color-focus);
    outline-offset: -2px;
}


#fullscreen-button {
    position: absolute;
    bottom: 10px;
    left: 10px;
    background: none;
    border: none;
    border-radius: 2px;
    color: var(--text-color);
    font-size: 24px;
    opacity: 0.5;
    transition: opacity 0.3s, transform 0.3s;
    z-index: 1004;
}

#fullscreen-button:hover,
#fullscreen-button:focus {
    opacity: 1;
    transform: scale(1.1);
}

body.fullscreen #fullscreen-button {
    font-size: 16px;
    bottom: 5px;
    left: 5px;
    opacity: 0.3;
}

.particle-line {
    position: absolute;
    background-color: #fff;
    pointer-events: none;
    border-radius: 2px;
    z-index: 9999;
    transform-origin: center;
    box-shadow: 0 0 2px rgba(58, 58, 58, 0.5);
    animation: particleFade 1s ease-out forwards, hueRotate 2.5s linear forwards;
}

@keyframes particleFade {
    100% {
        opacity: 0;
        width: 0;
    }
}

/* Animations */
@keyframes hueRotate {
    to {
        filter: hue-rotate(360deg);
    }
}

@keyframes textRotate {
    from {
        transform: rotate(0deg) translateX(2px) rotate(0deg);
    }

    to {
        transform: rotate(360deg) translateX(2px) rotate(-360deg);
    }
}

@keyframes horizontalGradient {
    from {
        background-position: 500% 0%;
        filter: hue-rotate(0deg);
    }

    to {
        background-position: -500% 0%;
        filter: hue-rotate(0deg);
    }
}

@keyframes gridPulseUp {
    0% {
        transform: scale(1);
        color: white;
        border-radius: 50%;
    }

    20% {
        transform: scale(1.35) scaleY(1.08) skew(4deg);
        color: var(--color-correct);
        border-radius: 58% 42% 53% 47% / 50% 57% 43% 50%;
    }

    35% {
        transform: scale(1.42) scaleY(0.85) skew(-2deg);
        border-radius: 40% 60% 50% 50% / 43% 50% 57% 57%;
    }

    50% {
        transform: scale(1.25) scaleY(0.92) rotate(2deg);
        border-radius: 53% 47% 43% 57% / 47% 53% 50% 50%;
    }

    75% {
        transform: scale(1.08) scaleY(1.04) rotate(-1deg);
        border-radius: 47% 53% 50% 50% / 53% 47% 57% 43%;
    }

    90% {
        transform: scale(0.96) scaleY(1.015) skew(1deg);
        border-radius: 50% 50% 47% 53% / 50% 50% 47% 53%;
    }

    100% {
        transform: scale(1);
        color: white;
        border-radius: 50%;
    }
}

@keyframes gridPulseDown {
    0% {
        transform: scale(1);
        color: white;
        border-radius: 50%;
    }

    20% {
        transform: scale(1.08) scaleY(1.35) skew(-4deg);
        color: var(--color-incorrect);
        border-radius: 43% 57% 50% 50% / 57% 43% 53% 47%;
    }

    35% {
        transform: scale(1.25) scaleY(0.85) skew(2deg);
        border-radius: 60% 40% 47% 53% / 50% 57% 43% 50%;
    }

    50% {
        transform: scale(0.85) scaleY(1.15) rotate(-2deg);
        border-radius: 53% 47% 57% 43% / 43% 50% 57% 50%;
    }

    75% {
        transform: scale(0.92) scaleY(1.04) rotate(1deg);
        border-radius: 50% 50% 43% 57% / 53% 47% 50% 50%;
    }

    90% {
        transform: scale(0.96) scaleY(1.015) skew(-1deg);
        border-radius: 47% 53% 50% 50% / 50% 50% 53% 47%;
    }

    100% {
        transform: scale(1);
        color: white;
        border-radius: 50%;
    }
}

@keyframes scorePulseUp {
    0% {
        transform: scale(1);
        color: white;
    }

    20% {
        transform: scale(1.4) scaleY(1);
        color: var(--color-correct);
    }

    30% {
        transform: scale(1.5) scaleY(0.8);
    }

    50% {
        transform: scale(1.3) scaleY(0.6);
    }

    90% {
        transform: scale(0.9) scaleY(1.1);
    }

    100% {
        transform: scale(1);
        color: white;
    }
}

@keyframes scorePulseDown {
    0% {
        transform: scale(1);
        color: white;
    }

    20% {
        transform: scale(1) scaleY(1.4);
        color: var(--color-incorrect);
    }

    30% {
        transform: scale(1.5) scaleY(0.8);
    }

    50% {
        transform: scale(0.6) scaleY(1.3);
    }

    90% {
        transform: scale(0.9) scaleY(1.1);
    }

    100% {
        transform: scale(1);
        color: white;
    }
}

@keyframes fadeIn {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

@keyframes fadeOut {
    0% {
        opacity: 0.95;
    }

    5%,
    15% {
        opacity: 1;
    }

    50% {
        opacity: 0.25;
    }

    100% {
        opacity: 0;
    }
}

@keyframes rotateCharacter {

    0%,
    25%,
    62.5%,
    100% {
        transform: rotate(0deg);
    }

    50% {
        transform: rotate(calc(var(--rotate-magnitude) * var(--animation-multiplier) * -1));
    }

    37.5% {
        transform: rotate(calc(var(--rotate-magnitude) * var(--animation-multiplier)));
    }
}

@keyframes horizontalCharacterMovement {

    0%,
    25%,
    62.5%,
    100% {
        right: 0%;
    }

    50% {
        right: calc(var(--horizontal-magnitude) * var(--animation-multiplier));
    }

    37.5% {
        right: calc(var(--horizontal-magnitude) * var(--animation-multiplier) * -1);
    }
}

@keyframes verticalCharacterMovement {

    0%,
    25%,
    62.5%,
    100% {
        top: 0%;
    }

    50% {
        top: calc(var(--vertical-magnitude) * var(--animation-multiplier));
    }

    37.5% {
        top: calc(var(--vertical-magnitude) * var(--animation-multiplier) * -1);
    }
}

@keyframes pulseCharacter {

    0%,
    25%,
    62.5%,
    100% {
        transform: scale(1);
    }

    50% {
        transform: scale(calc(1 + var(--pulse-magnitude) * var(--animation-multiplier) * -1));
    }

    37.5% {
        transform: scale(calc(1 + var(--pulse-magnitude) * var(--animation-multiplier)));
    }
}

/* Utility classes */
.fade-in {
    animation: fadeIn 1s ease-in forwards, hueRotate 0.5s linear forwards infinite;
}

.fade-out {
    animation: fadeOut 1s ease-out forwards, hueRotate 0.5s linear forwards infinite;
}

.pulse-up {
    animation: scorePulseUp var(--pulse-duration) ease-in-out 0.2s;
}

.pulse-down {
    animation: scorePulseDown var(--pulse-duration) ease-in-out 0.2s;
}

/* Responsive design */
@media (max-width: 768px) {
    .header {
        flex-direction: column;
        height: auto;
        top: 1vh;
    }

    .hint-holder,
    .character-display,
    .score-holder {
        width: 90%;
        margin: 5px 0;
    }



    .instructions {
        max-width: 90%;
        max-height: 90%;
    }

    .grid-cell {
        font-size: calc(1.5vw + 1.5vh);
    }


    .unlocked-percentage {
        margin-top: 3px;
    }

    .game-grid {
        grid-template-rows: repeat(var(--grid-rows, 10), 1fr);
        grid-template-columns: repeat(var(--grid-cols, 12), 1fr);
    }
}

@media (max-width: 480px) {
    .character-display-text {
        font-size: 3vh;
    }

    .grid-cell {
        font-size: calc(1.5vw + 1.5vh);
    }

    .hint-holder,
    .score-holder {
        font-size: 1.5vh;
        padding: 0.5vh;
    }

    .unlocked-percentage {
        margin-top: 2px;
    }

    .game-grid {
        grid-template-rows: repeat(var(--grid-rows, 12), 1fr);
        grid-template-columns: repeat(var(--grid-cols, 10), 1fr);
    }
}

/* Accessibility enhancement for keyboard navigation */
.grid-cell:focus-visible::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    box-shadow: 0 0 10px 5px var(--color-focus);
    border-radius: inherit;
    animation: hueRotate 6s linear infinite;
    transition: box-shadow var(--transition-duration) ease-in-out;
    pointer-events: none;
}

.grid-cell.hide-focus-visuals:focus-visible::after {
    box-shadow: 0 0 10px 5px #f5c34530;
    animation: none;
}

.grid-cell.hide-focus-visuals {
    outline: none;
}

.grid-cell:focus {
    outline: none;
    box-shadow: none; /* Override global focus style */
}



.timescale-control:focus-within {
    opacity: 1;
}

/* Print styles (if needed) */
@media print {
    .game-container {
        border: none;
    }

    .timer-bar,
    .swipe-gradient,
    .timescale-control,
    #fullscreen-button {
        display: none;
    }
}